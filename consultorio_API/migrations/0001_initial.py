# Generated by Django 4.2 on 2025-08-22 01:18

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('rol', models.CharField(choices=[('admin', 'Administrador'), ('medico', 'Médico'), ('asistente', 'Asistente')], max_length=20)),
                ('telefono', models.CharField(blank=True, max_length=15, null=True)),
                ('cedula_profesional', models.CharField(blank=True, max_length=20, null=True)),
                ('institucion_cedula', models.CharField(blank=True, max_length=100, null=True)),
                ('foto', models.ImageField(blank=True, null=True, upload_to='usuarios/fotos/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpg', 'jpeg', 'png'])])),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Cita',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('numero_cita', models.CharField(max_length=50, unique=True)),
                ('fecha_hora', models.DateTimeField()),
                ('duracion', models.PositiveIntegerField(default=30, help_text='Duración en minutos')),
                ('tipo_cita', models.CharField(choices=[('primera_vez', 'Primera Vez'), ('cita_normal', 'Cita Normal')], default='cita_normal', max_length=20)),
                ('prioridad', models.CharField(choices=[('baja', 'Baja'), ('normal', 'Normal'), ('alta', 'Alta'), ('urgente', 'Urgente')], default='normal', max_length=10)),
                ('estado', models.CharField(choices=[('programada', 'Programada'), ('confirmada', 'Confirmada'), ('en_espera', 'En Espera'), ('en_atencion', 'En Atención'), ('completada', 'Completada'), ('cancelada', 'Cancelada'), ('no_asistio', 'No Asistió'), ('reprogramada', 'Reprogramada')], default='programada', max_length=15)),
                ('motivo', models.TextField(blank=True, help_text='Motivo de la consulta')),
                ('notas', models.TextField(blank=True, help_text='Notas adicionales')),
                ('observaciones_medicas', models.TextField(blank=True)),
                ('telefono_contacto', models.CharField(blank=True, max_length=15)),
                ('email_recordatorio', models.EmailField(blank=True, max_length=254)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True)),
                ('fecha_confirmacion', models.DateTimeField(blank=True, null=True)),
                ('fecha_cancelacion', models.DateTimeField(blank=True, null=True)),
                ('fecha_asignacion_medico', models.DateTimeField(blank=True, null=True)),
                ('recordatorio_enviado', models.BooleanField(default=False)),
                ('fecha_recordatorio', models.DateTimeField(blank=True, null=True)),
                ('motivo_cancelacion', models.TextField(blank=True)),
                ('actualizado_por', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='citas_actualizadas', to=settings.AUTH_USER_MODEL)),
                ('cita_anterior', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='consultorio_API.cita')),
            ],
            options={
                'ordering': ['fecha_hora'],
            },
        ),
        migrations.CreateModel(
            name='Consulta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_atencion', models.DateTimeField(blank=True, null=True)),
                ('estado', models.CharField(choices=[('espera', 'En Espera'), ('en_progreso', 'En Progreso'), ('finalizada', 'Finalizada'), ('cancelada', 'Cancelada')], default='espera', max_length=20)),
                ('tipo', models.CharField(choices=[('con_cita', 'Con Cita'), ('sin_cita', 'Sin Cita')], max_length=20)),
                ('motivo_consulta', models.TextField(blank=True, null=True)),
                ('diagnostico', models.TextField(blank=True, null=True)),
                ('tratamiento', models.TextField(blank=True, null=True)),
                ('observaciones', models.TextField(blank=True, null=True)),
                ('asistente', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='consultas_asistente', to=settings.AUTH_USER_MODEL)),
                ('cita', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='consultorio_API.cita')),
                ('medico', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='consultas_medico', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Consultorio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100, unique=True)),
                ('ubicacion', models.TextField(blank=True, null=True)),
                ('capacidad_diaria', models.PositiveSmallIntegerField(default=20)),
                ('horario_apertura', models.TimeField(default='09:00')),
                ('horario_cierre', models.TimeField(default='17:00')),
            ],
        ),
        migrations.CreateModel(
            name='Expediente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creado', models.DateTimeField(auto_now_add=True)),
                ('modificado', models.DateTimeField(auto_now=True)),
                ('notas_generales', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='MedicamentoCatalogo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=255)),
                ('codigo_barras', models.CharField(max_length=50, unique=True)),
                ('existencia', models.PositiveIntegerField(default=0)),
                ('departamento', models.CharField(blank=True, max_length=100, null=True)),
                ('precio', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('categoria', models.CharField(blank=True, max_length=100, null=True)),
                ('imagen', models.ImageField(blank=True, null=True, upload_to='catalogo/')),
            ],
        ),
        migrations.CreateModel(
            name='SignosVitales',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_registro', models.DateTimeField(auto_now_add=True)),
                ('tension_arterial', models.CharField(blank=True, help_text='Ej. 120/80', max_length=20, null=True, verbose_name='T.A. (Tensión Arterial)')),
                ('frecuencia_cardiaca', models.PositiveSmallIntegerField(blank=True, help_text='Latidos por minuto', null=True, verbose_name='F.C. (lpm)')),
                ('frecuencia_respiratoria', models.PositiveSmallIntegerField(blank=True, help_text='Respiraciones por minuto', null=True, verbose_name='F.R. (rpm)')),
                ('temperatura', models.DecimalField(blank=True, decimal_places=1, max_digits=4, null=True, verbose_name='Temp. (°C)')),
                ('peso', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, verbose_name='Peso (kg)')),
                ('talla', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True, verbose_name='Talla (m)')),
                ('circunferencia_abdominal', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, verbose_name='Circ. abdominal (cm)')),
                ('imc', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='IMC')),
                ('alergias', models.TextField(blank=True, help_text='Describir sustancias o marcar NEGATIVO', null=True, verbose_name='Alergias del paciente')),
                ('sintomas', models.TextField(blank=True, null=True, verbose_name='Síntomas o padecimientos actuales')),
                ('consulta', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='signos_vitales', to='consultorio_API.consulta')),
                ('registrado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='signos_registrados', to=settings.AUTH_USER_MODEL, verbose_name='Registrado por')),
            ],
        ),
        migrations.CreateModel(
            name='Receta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_emision', models.DateField(auto_now_add=True)),
                ('valido_hasta', models.DateField(blank=True, null=True)),
                ('indicaciones_generales', models.TextField(blank=True, null=True)),
                ('notas', models.TextField(blank=True, null=True)),
                ('consulta', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='receta', to='consultorio_API.consulta')),
                ('medico', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='recetas_emitidas', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Paciente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_completo', models.CharField(max_length=100)),
                ('fecha_nacimiento', models.DateField()),
                ('sexo', models.CharField(choices=[('M', 'Masculino'), ('F', 'Femenino'), ('O', 'Otro')], max_length=1)),
                ('telefono', models.CharField(max_length=15)),
                ('correo', models.EmailField(max_length=254)),
                ('direccion', models.TextField()),
                ('foto', models.ImageField(blank=True, null=True, upload_to='pacientes/')),
                ('consultorio', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='pacientes', to='consultorio_API.consultorio')),
            ],
        ),
        migrations.CreateModel(
            name='Notificacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=200)),
                ('mensaje', models.TextField()),
                ('tipo', models.CharField(choices=[('info', 'Información'), ('warning', 'Advertencia'), ('success', 'Éxito'), ('error', 'Error'), ('urgent', 'Urgente')], default='info', max_length=10)),
                ('categoria', models.CharField(choices=[('auditoria', 'Auditoría'), ('cita_proxima', 'Cita Próxima'), ('cita_creada', 'Cita Creada'), ('consulta_creada', 'Consulta Creada'), ('signos_registrados', 'Signos Vitales'), ('sistema', 'Sistema'), ('recordatorio', 'Recordatorio')], default='sistema', max_length=20)),
                ('object_id', models.CharField(blank=True, max_length=255, null=True)),
                ('url_accion', models.URLField(blank=True, help_text='URL para redirigir al hacer clic')),
                ('texto_accion', models.CharField(blank=True, help_text='Texto del botón de acción', max_length=50)),
                ('leido', models.BooleanField(default=False)),
                ('fecha', models.DateTimeField(auto_now_add=True)),
                ('fecha_leido', models.DateTimeField(blank=True, null=True)),
                ('datos_extra', models.JSONField(blank=True, default=dict, help_text='Datos adicionales en formato JSON')),
                ('content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('destinatario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notificaciones', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-fecha'],
            },
        ),
        migrations.CreateModel(
            name='MedicamentoRecetado',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
                ('principio_activo', models.CharField(blank=True, max_length=100, null=True)),
                ('dosis', models.CharField(max_length=50)),
                ('frecuencia', models.CharField(max_length=100)),
                ('via_administracion', models.CharField(blank=True, max_length=50, null=True)),
                ('duracion', models.CharField(max_length=50)),
                ('cantidad', models.PositiveIntegerField(default=1)),
                ('codigo_barras', models.CharField(blank=True, max_length=32, null=True)),
                ('categoria', models.CharField(blank=True, max_length=100, null=True)),
                ('departamento', models.CharField(blank=True, max_length=100, null=True)),
                ('indicaciones_especificas', models.TextField(blank=True, null=True)),
                ('receta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='medicamentos', to='consultorio_API.receta')),
            ],
        ),
        migrations.CreateModel(
            name='MedicamentoActual',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
                ('principio_activo', models.CharField(blank=True, max_length=100, null=True)),
                ('dosis', models.CharField(max_length=50)),
                ('frecuencia', models.CharField(max_length=100)),
                ('via_administracion', models.CharField(blank=True, max_length=50, null=True)),
                ('proposito', models.CharField(blank=True, max_length=100, null=True)),
                ('inicio', models.DateField(blank=True, null=True)),
                ('fin', models.DateField(blank=True, null=True)),
                ('prescrito_por', models.CharField(blank=True, max_length=100, null=True)),
                ('notas', models.TextField(blank=True, null=True)),
                ('creado', models.DateTimeField(auto_now_add=True)),
                ('modificado', models.DateTimeField(auto_now=True)),
                ('expediente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='medicamentos_actuales', to='consultorio_API.expediente')),
            ],
        ),
        migrations.CreateModel(
            name='HorarioMedico',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dia', models.CharField(choices=[('lunes', 'Lunes'), ('martes', 'Martes'), ('miércoles', 'Miércoles'), ('jueves', 'Jueves'), ('viernes', 'Viernes'), ('sábado', 'Sábado'), ('domingo', 'Domingo')], max_length=10)),
                ('hora_inicio', models.TimeField()),
                ('hora_fin', models.TimeField()),
                ('consultorio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='consultorio_API.consultorio')),
                ('medico', models.ForeignKey(limit_choices_to={'rol': 'medico'}, on_delete=django.db.models.deletion.CASCADE, related_name='horarios', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['medico', 'dia', 'hora_inicio'],
            },
        ),
        migrations.AddField(
            model_name='expediente',
            name='paciente',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='expediente', to='consultorio_API.paciente'),
        ),
        migrations.AddField(
            model_name='consulta',
            name='paciente',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='consultorio_API.paciente'),
        ),
        migrations.AddField(
            model_name='cita',
            name='consultorio',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='citas', to='consultorio_API.consultorio'),
        ),
        migrations.AddField(
            model_name='cita',
            name='creado_por',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='citas_creadas', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='cita',
            name='medico_asignado',
            field=models.ForeignKey(blank=True, help_text='Médico que tomará/tomó la consulta', limit_choices_to={'rol': 'medico'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='citas_asignadas', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='cita',
            name='medico_preferido',
            field=models.ForeignKey(blank=True, help_text='Médico preferido por el paciente (opcional)', limit_choices_to={'rol': 'medico'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='citas_preferidas', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='cita',
            name='paciente',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='citas', to='consultorio_API.paciente'),
        ),
        migrations.CreateModel(
            name='Auditoria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('accion', models.CharField(max_length=50)),
                ('descripcion', models.TextField(blank=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.CharField(blank=True, max_length=255)),
                ('object_id', models.CharField(max_length=255)),
                ('fecha', models.DateTimeField(auto_now_add=True)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-fecha'],
            },
        ),
        migrations.CreateModel(
            name='Antecedente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('personal', 'Personal'), ('familiar', 'Familiar'), ('quirurgico', 'Quirúrgico'), ('alergico', 'Alérgico'), ('toxicologico', 'Toxicológico')], max_length=20)),
                ('descripcion', models.TextField()),
                ('fecha_diagnostico', models.DateField(blank=True, null=True)),
                ('severidad', models.CharField(choices=[('baja', 'Baja'), ('media', 'Media'), ('alta', 'Alta')], default='media', max_length=10)),
                ('estado_actual', models.CharField(choices=[('estable', 'Estable'), ('en_tratamiento', 'En tratamiento'), ('controlado', 'Controlado'), ('resuelto', 'Resuelto')], default='estable', max_length=20)),
                ('notas', models.TextField(blank=True, null=True)),
                ('creado', models.DateTimeField(auto_now_add=True)),
                ('modificado', models.DateTimeField(auto_now=True)),
                ('expediente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='antecedentes', to='consultorio_API.expediente')),
            ],
            options={
                'ordering': ['-fecha_diagnostico'],
            },
        ),
        migrations.AddField(
            model_name='usuario',
            name='consultorio',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='usuarios_asignados', to='consultorio_API.consultorio'),
        ),
        migrations.AddField(
            model_name='usuario',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='usuario',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
        migrations.AddIndex(
            model_name='notificacion',
            index=models.Index(fields=['destinatario', 'leido'], name='consultorio_destina_9d0ff7_idx'),
        ),
        migrations.AddIndex(
            model_name='notificacion',
            index=models.Index(fields=['categoria', 'fecha'], name='consultorio_categor_8efbe6_idx'),
        ),
        migrations.AddIndex(
            model_name='notificacion',
            index=models.Index(fields=['tipo', 'fecha'], name='consultorio_tipo_9cc172_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='horariomedico',
            unique_together={('medico', 'dia', 'consultorio')},
        ),
        migrations.AddIndex(
            model_name='cita',
            index=models.Index(fields=['fecha_hora'], name='consultorio_fecha_h_0e6a88_idx'),
        ),
        migrations.AddIndex(
            model_name='cita',
            index=models.Index(fields=['estado'], name='consultorio_estado_cf6ecb_idx'),
        ),
        migrations.AddIndex(
            model_name='cita',
            index=models.Index(fields=['consultorio', 'fecha_hora'], name='consultorio_consult_150a4f_idx'),
        ),
        migrations.AddIndex(
            model_name='cita',
            index=models.Index(fields=['paciente', 'fecha_hora'], name='consultorio_pacient_208d67_idx'),
        ),
        migrations.AddIndex(
            model_name='cita',
            index=models.Index(fields=['medico_asignado', 'fecha_hora'], name='consultorio_medico__161c0c_idx'),
        ),
    ]
